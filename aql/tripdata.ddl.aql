drop dataverse tripdata if exists;
create dataverse tripdata;

use dataverse tripdata;

create type TripDataType as closed {
	id: uuid, 
	vendor_id: int8,
	pickup_datetime: datetime,
	dropoff_datetime: datetime,
	passenger_count: int32,
	trip_distance: float,
	pickup_location: point,
	ratecode_id: int8,
	store_and_fwd_flag: string,
	dropoff_location: point,
	payment_type: int8,
	fare_amount: float,
	extra: float,
	mta_tax: float, 
	tip_amount: float,
	tolls_amount: float,
	improvement_surcharge: float,
	total_amount: float,	
	neighbor_id: int8
}

create type NeighborType as closed{
	id: int32,
	neighbor_name: string,
	boro_code: int32,
	spatial_cell: polygon
}

create type CellType as open{
	id: uuid,
	spatial_id: int32,
	start_time: datetime,
	count: int32
}

drop dataset cell if exists;
create dataset cell(CellType) primary key id autogenerated;
create dataset neighborhood(NeighborType) primary key id;
create dataset tripdata(TripDataType) primary key id autogenerated;

create index dropoffDatetimeIdx on tripdata(dropoff_datetime) type btree;
create index dropoffLocationIdx on tripdata(dropoff_location) type rtree;
create index neighborIdIdx on tripdata(neighbor_id) type btree;
create index starttimeIdx on cell(start_time) type btree;
